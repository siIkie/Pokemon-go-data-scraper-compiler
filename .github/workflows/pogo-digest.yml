name: POGO Events Digest (Smart Watch)

on:
  schedule:
    - cron: "*/ 5* * * *"   # every 2 hours
  workflow_dispatch:         # manual run

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.watch.outputs.changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Restore feed state
        id: restore
        uses: actions/cache@v4
        with:
          path: .state
          key: feed-state

      - name: Watch feeds
        id: watch
        run: |
          mkdir -p .state
          curl -s https://pokemongolive.com/news/?format=rss -o .state/niantic.xml.new
          curl -s https://leekduck.com/events/ -o .state/leek_events.html.new
          curl -s https://leekduck.com/calendar/ -o .state/leek_cal.html.new

          CHANGED=false
          for f in niantic.xml leek_events.html leek_cal.html; do
            if ! cmp -s .state/$f .state/$f.new; then
              echo "Feed $f changed"
              mv .state/$f.new .state/$f
              CHANGED=true
            else
              rm .state/$f.new
            fi
          done
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT

      - name: Save feed state
        if: steps.watch.outputs.changed == 'true'
        uses: actions/cache@v4
        with:
          path: .state
          key: feed-state-${{ github.run_id }}

  build:
    needs: check
    if: needs.check.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    outputs:
      END: ${{ steps.dates.outputs.END }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Compute date range
        id: dates
        run: |
          echo "START=2024-06-01" >> $GITHUB_OUTPUT
          echo "END=$(date +%Y-%m-%d)" >> $GITHUB_OUTPUT

      - name: Build library
        run: |
          python build_pogo_library.py \
            --start "${{ steps.dates.outputs.START }}" \
            --end   "${{ steps.dates.outputs.END }}" \
            --out pogo_library

      - name: Build digest + ICS
        run: |
          python digest_from_library.py \
            --lib pogo_library \
            --out POGO_Digest.xlsx \
            --ics POGO_Events.ics

      - name: Export CSV + JSON (fast formats)
        run: |
          python - <<'PY'
          import pandas as pd
          df = pd.read_excel("POGO_Digest.xlsx", sheet_name="Events")
          keep = [c for c in [
              "Start Date","End Date","Event Name",
              "Category (CD / CD Classic / Raid / Mega / Shadow Raid / Spotlight / Research / Other)"
          ] if c in df.columns]
          if keep:
              df = df[keep]
          df.to_csv("POGO_Digest.csv", index=False)
          df.to_json("POGO_Digest.json", orient="records", date_format="iso")
          PY

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: POGO_Digest_${{ steps.dates.outputs.END }}
          path: |
            POGO_Digest.xlsx
            POGO_Digest.csv
            POGO_Digest.json
            POGO_Events.ics
            pogo_library/niantic/index.json
            pogo_library/leekduck/index.json

      - name: Commit stable copies to repo
        run: |
          mkdir -p outputs/latest
          cp POGO_Digest.xlsx outputs/latest/POGO_Digest.xlsx
          cp POGO_Digest.csv  outputs/latest/POGO_Digest.csv
          cp POGO_Digest.json outputs/latest/POGO_Digest.json
          cp POGO_Events.ics  outputs/latest/POGO_Events.ics
          {
            echo "# Latest POGO Digest"
            echo "- Built on: ${{ steps.dates.outputs.END }}"
            echo "- Range: ${{ steps.dates.outputs.START }} → ${{ steps.dates.outputs.END }}"
            echo "- Files: POGO_Digest.xlsx, POGO_Digest.csv, POGO_Digest.json, POGO_Events.ics"
          } > outputs/latest/README.md
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add outputs/latest/ pogo_library/niantic/index.json pogo_library/leekduck/index.json
          git commit -m "Update latest digest: ${{ steps.dates.outputs.START }} → ${{ steps.dates.outputs.END }}" || echo "No changes to commit"
          git push || echo "No changes to push"

  release:
    needs: build
    if: needs.check.outputs.changed == 'true' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: POGO_Digest_${{ needs.build.outputs.END }}
          path: dist

      - name: Create/Update Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: pogo-digest-${{ needs.build.outputs.END }}
          name: "POGO Digest ${{ needs.build.outputs.END }}"
          body: "Automated digest after feed change or manual trigger."
          files: |
            dist/POGO_Digest.xlsx
            dist/POGO_Digest.csv
            dist/POGO_Digest.json
            dist/POGO_Events.ics